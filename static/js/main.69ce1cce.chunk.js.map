{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","inputTitle","defaultSelect","fitterByTitle","todo","title","toLowerCase","includes","handleInput","target","value","name","setState","filterByStatus","completed","this","props","todos","checkedHandler","selecUser","randomizTodo","filterTodos","filter","className","length","type","variant","color","onClick","label","id","onChange","map","key","checked","readOnly","userId","React","Component","request","url","fetch","then","response","ok","Error","status","statusText","json","result","data","getUser","CurrentUser","user","prevProps","clearUser","email","phone","App","selectedUserId","todoId","item","find","element","selectUser","i","random","Math","floor","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69ce1cce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport className from 'classnames';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    inputTitle: '',\n    defaultSelect: 'Show All',\n  }\n\n  fitterByTitle = (todo) => {\n    const { inputTitle } = this.state;\n\n    return todo.title.toLowerCase()\n      .includes(inputTitle.toLowerCase());\n  }\n\n  handleInput = ({ target }) => {\n    const { value, name } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  filterByStatus = (todo) => {\n    const { defaultSelect } = this.state;\n\n    switch (defaultSelect) {\n      case 'Show Completed':\n        return todo.completed;\n      case 'Show Active':\n        return !todo.completed;\n      default:\n        return true;\n    }\n  }\n\n  render() {\n    const {\n      todos,\n      checkedHandler,\n      selecUser,\n      randomizTodo,\n    } = this.props;\n\n    const {\n      inputTitle,\n      defaultSelect,\n    } = this.state;\n\n    const filterTodos = todos\n      .filter(this.fitterByTitle)\n      .filter(this.filterByStatus);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>{`Todos: ${filterTodos.length}`}</h2>\n        <div className=\"TodoList__box\">\n          <button\n            className=\"\n            TodoList__user-button\n            TodoList__user-button--selected\n            button\n            \"\n            type=\"button\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              randomizTodo(todos);\n            }}\n          >\n            Random\n          </button>\n          <form className=\"TodoList__form\">\n            <input\n              className=\"TodoList__input\"\n              label=\"Search todos\"\n              name=\"inputTitle\"\n              id=\"outline-size-small\"\n              value={inputTitle}\n              onChange={this.handleInput}\n            />\n            <select\n              className=\"TodoList__select\"\n              name=\"defaultSelect\"\n              value={defaultSelect}\n              onChange={this.handleInput}\n            >\n              <option value=\"Show All\">\n                Show All\n              </option>\n              <option value=\"Show Completed\">\n                Show Completed\n              </option>\n              <option value=\"Show Active\">\n                Show Active\n              </option>\n            </select>\n          </form>\n        </div>\n        <ul className=\"TodoList__list\">\n          {filterTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={className('TodoList__item', {\n                'TodoList__item--checked': todo.completed === true,\n                ' TodoList__item--unchecked': todo.completed === false,\n              })}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  name=\"completed\"\n                  onChange={() => checkedHandler(todo.id)}\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n              <button\n                className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n                \"\n                type=\"button\"\n                onClick={() => {\n                  selecUser(todo.userId);\n                }}\n              >\n                {`User #${todo.userId}`}\n              </button>\n            </li>\n          ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  checkedHandler: PropTypes.func.isRequired,\n  selecUser: PropTypes.func.isRequired,\n  randomizTodo: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\n\nexport const getAllTodos = () => request('/todos');\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then((user) => {\n        this.setState({\n          user,\n        });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUser(this.props.userId)\n        .then((user) => {\n          this.setState({\n            user,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <>\n        {\n          user === null ? (\n            <h2>Error</h2>\n          )\n            : (\n              <div className=\"user\">\n                <h2 className=\"user__title\">\n                  <span>{`Selected user: ${user.id}`}</span>\n                </h2>\n\n                <h3 className=\"user__name\">{user.name}</h3>\n                <p className=\"user__email\">{user.email}</p>\n                <p className=\"user__phone\">{user.phone}</p>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    clearUser();\n                  }}\n                >\n                  Clear\n                </button>\n              </div>\n            )\n        }\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getAllTodos().then((todos) => {\n      const res = this.filterTodos(todos);\n\n      this.setState({\n        todos: res,\n      });\n    });\n  }\n\n  checkedHandler = (todoId) => {\n    this.setState((state) => {\n      const item = [...state.todos]\n        .find(element => element.id === todoId);\n\n      item.completed = !item.completed;\n\n      return {\n        todos: [...state.todos],\n      };\n    });\n  }\n\n  filterTodos = todos => todos\n    .filter(todo => typeof todo.userId === 'number')\n    .filter(todo => typeof todo.completed === 'boolean')\n    .filter(todo => todo.title !== '')\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  randomizTodo = (todos) => {\n    for (let i = todos.length - 1; i > 0; i -= 1) {\n      const random = Math.floor(Math.random() * (i + 1));\n\n      // eslint-disable-next-line no-param-reassign\n      [todos[i], todos[random]] = [todos[random], todos[i]];\n    }\n\n    this.setState({ todos });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            checkedHandler={this.checkedHandler}\n            selecUser={this.selectUser}\n            randomizTodo={this.randomizTodo}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}